name: Deploy to GitHub Pages

on:
  # Ejecutar en cambios a la rama principal
  push:
    branches: [main]
  # Permite ejecutar manualmente desde la pestaña Actions
  workflow_dispatch:

# Permitir el despliegue en GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
      - name: Setup Pages
        uses: actions/configure-pages@v4      - name: Install dependencies
        run: npm ci
      - name: Build TinaCMS
        env:
          TINA_PUBLIC_CLIENT_ID: ${{ secrets.TINA_PUBLIC_CLIENT_ID }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}
        run: npx tinacms build
      - name: Build with Astro
        run: npm run build
      # Verificar que los archivos de TinaCMS se generaron correctamente
      - name: Verify TinaCMS build
        run: |
          if (Test-Path "./public/admin/index.html") {
            Write-Host "✅ TinaCMS generó correctamente el index.html"
          } else {
            Write-Host "❌ No se encontró index.html generado por TinaCMS"
            exit 1
          }
        shell: pwsh
      # Crear archivo .nojekyll para indicar a GitHub Pages que no use Jekyll
      - name: Create .nojekyll file
        run: touch ./dist/.nojekyll
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4