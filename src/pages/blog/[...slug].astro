---
// Add the prerender directive
export const prerender = true;

import { getCollection, getEntry } from 'astro:content';
import BlogPostLayout from '../../layouts/BlogPostLayout.astro';

// Esta funci칩n se ejecuta en build time en modo est치tico
// y en runtime en modo SSR
export async function getStaticPaths() {
  // Si estamos en modo build (no SSR), generamos todas las rutas est치ticas
  const blogEntries = await getCollection('blog');
  return blogEntries.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Soporte para SSR
const { slug } = Astro.params;
let post;
let Content;

if (slug) {
  try {
    // Intentamos obtener el post por su slug
    post = await getEntry('blog', slug);
    
    if (post) {
      const rendered = await post.render();
      Content = rendered.Content;
    }
  } catch (error) {
    console.error(`Error loading post with slug "${slug}":`, error);
    // Si hay error, redirigimos a 404
    return Astro.redirect('/404');
  }
}

// Si no se encontr칩 el post, redirigimos a 404
if (!post || !Content) {
  return Astro.redirect('/404');
}
---

<BlogPostLayout post={post}>
  <Content />
</BlogPostLayout> 







